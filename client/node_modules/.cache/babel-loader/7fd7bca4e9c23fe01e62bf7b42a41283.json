{"ast":null,"code":"import _objectSpread from \"/home/pdrclv/react/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// import SHOP_DATA from './shop.data'; desde que los datos se guardan en backend, en firebase, ya no hace falta este archivo.\nimport ShopActionTypes from './shop.types';\nconst INITIAL_STATE = {\n  //  collections: SHOP_DATA ya no hace falta el inicial state a SHOP_DATA, porque no existe el archivo. se inicializa a null.\n  collections: null,\n  isFetching: false,\n  errorMessage: undefined //incluimos ahora la propiedad isFetching, para saber si est치 cargando informaci칩n, o no.\n\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return _objectSpread({}, state, {\n        isFetching: true\n      });\n\n    case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        collections: action.payload\n      });\n\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return _objectSpread({}, state, {\n        isFetching: false,\n        errorMessage: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/redux/shop/shop.reducer.js"],"names":["ShopActionTypes","INITIAL_STATE","collections","isFetching","errorMessage","undefined","shopReducer","state","action","type","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","payload","FETCH_COLLECTIONS_FAILURE"],"mappings":";AAAA;AAEA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACtB;AACEC,EAAAA,WAAW,EAAC,IAFQ;AAGpBC,EAAAA,UAAU,EAAC,KAHS;AAIpBC,EAAAA,YAAY,EAACC,SAJO,CAKtB;;AALsB,CAAtB;;AAQA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACN,aAAP,EAAsBO,MAAtB,KAAgC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,uBAArB;AACE,+BACKH,KADL;AAEEJ,QAAAA,UAAU,EAAC;AAFb;;AAIA,SAAKH,eAAe,CAACW,yBAArB;AACA,+BACKJ,KADL;AAEEJ,QAAAA,UAAU,EAAC,KAFb;AAGED,QAAAA,WAAW,EAACM,MAAM,CAACI;AAHrB;;AAKF,SAAKZ,eAAe,CAACa,yBAArB;AACE,+BACKN,KADL;AAEEJ,QAAAA,UAAU,EAAC,KAFb;AAGEC,QAAAA,YAAY,EAACI,MAAM,CAACI;AAHtB;;AAKF;AACE,aAAOL,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["// import SHOP_DATA from './shop.data'; desde que los datos se guardan en backend, en firebase, ya no hace falta este archivo.\n\nimport ShopActionTypes from './shop.types';\n\nconst INITIAL_STATE = {\n//  collections: SHOP_DATA ya no hace falta el inicial state a SHOP_DATA, porque no existe el archivo. se inicializa a null.\n  collections:null,\n  isFetching:false,\n  errorMessage:undefined\n//incluimos ahora la propiedad isFetching, para saber si est치 cargando informaci칩n, o no.\n}\n\nconst shopReducer = (state=INITIAL_STATE, action) =>{\n  switch (action.type) {\n    case ShopActionTypes.FETCH_COLLECTIONS_START:\n      return {\n        ...state,\n        isFetching:true\n      };\n      case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n      return {\n        ...state,\n        isFetching:false,\n        collections:action.payload\n      };\n    case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n      return {\n        ...state,\n        isFetching:false,\n        errorMessage:action.payload\n      };\n    default: \n      return state;\n  }\n};\n\nexport default shopReducer;"]},"metadata":{},"sourceType":"module"}
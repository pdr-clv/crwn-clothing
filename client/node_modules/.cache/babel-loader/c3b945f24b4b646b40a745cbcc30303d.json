{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { CollectionFooterContainer, NameContainer, PriceContainer } from './collection-item.styles';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const name = item.name,\n        price = item.price,\n        imageUrl = item.imageUrl;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(CollectionFooterContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(NameContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, name), React.createElement(PriceContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, price)), React.createElement(CustomButton, {\n    className: \"custom-button\",\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n}); //ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\n\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/components/collection-item/collection-item.component.jsx"],"names":["React","CustomButton","connect","addItem","CollectionFooterContainer","NameContainer","PriceContainer","CollectionItem","item","name","price","imageUrl","backgroundImage","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAGA,SACCC,yBADD,EAECC,aAFD,EAGCC,cAHD,QAIO,0BAJP;AAKA,OAAO,+BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOL,EAAAA;AAAP,CAAD,KAAqB;AAAA,QACnCM,IADmC,GACTD,IADS,CACnCC,IADmC;AAAA,QAC7BC,KAD6B,GACTF,IADS,CAC7BE,KAD6B;AAAA,QACtBC,QADsB,GACTH,IADS,CACtBG,QADsB;AAE3C,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,OAAf;AACC,IAAA,KAAK,EAAE;AACPC,MAAAA,eAAe,EAAE,OAAMD,QAAS;AADzB,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,IAAhB,CADD,EAEC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,KAAjB,CAFD,CAND,EAUC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,eAAxB;AAAwC,IAAA,OAAO,EAAE,MAAIP,OAAO,CAACK,IAAD,CAA5D;AAAoE,IAAA,QAAQ,MAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVD,CADA;AAcC,CAhBF;;AAkBA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAI;AACtCX,EAAAA,OAAO,EAACK,IAAI,IAAIM,QAAQ,CAACX,OAAO,CAACK,IAAD,CAAR;AADc,CAAJ,CAAnC,C,CAGA;;;AACA,eAAeN,OAAO,CAAC,IAAD,EAAMW,kBAAN,CAAP,CAAiCN,cAAjC,CAAf","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\n\n\nimport {\n\tCollectionFooterContainer,\n\tNameContainer,\n\tPriceContainer\n} from './collection-item.styles'\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({item, addItem}) => {\n\tconst { name, price, imageUrl } = item;\n\treturn (\n\t<div className='collection-item'>\n\t\t<div className='image' \n\t\t\tstyle={{\n\t\t\tbackgroundImage:`url(${imageUrl})`\n\t\t}}\n\t\t/>\n\t\t<CollectionFooterContainer>\n\t\t\t<NameContainer>{name}</NameContainer>\n\t\t\t<PriceContainer>{price}</PriceContainer>\n\t\t</CollectionFooterContainer>\n\t\t<CustomButton className='custom-button' onClick={()=>addItem(item)} inverted>Add to cart</CustomButton>\n\n  </div>\n)};\n\nconst mapDispatchToProps = dispatch =>({\n\taddItem:item => dispatch(addItem(item))\n});\n//ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\nexport default connect(null,mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}
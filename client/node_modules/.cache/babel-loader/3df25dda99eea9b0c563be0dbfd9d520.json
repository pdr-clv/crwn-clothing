{"ast":null,"code":"import _objectSpread from \"/home/pdrclv/react/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n//aquí vamos a escribir toda la información del state relacionada con el usuario, y después se pasará a root-reducer.\n// es una función que recibe dos parametros, state inicial y el action (que es un objeto).\nimport UserActionTypes from './user.types';\nconst INITIAL_STATE = {\n  currentUser: null,\n  errorMessage: null\n}; // se pasa el valor inicial al  state null, es como dar estructura de lo que será el state, y se inicia a cero o null en este caso. Parecido a como cuando se renderiza App, y cuando se monta, se le pasa el valor de User de auth. cuando se hace Login\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    // usando UserActionTypes, nos aseguramos de no cometer un error pasando el SET_CURRENT_USER sin errores de escritura.\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        errorMessage: null\n      });\n\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return _objectSpread({}, state, {\n        errorMessage: action.payload\n      });\n\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: null,\n        errorMessage: null\n      });\n\n    /*    case UserActionTypes.SIGN_UP_SUCCESS:\n          return {\n            ...state,\n            currentUser:action.payload,\n            errorMessage: null\n          };*/\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/redux/user/user.reducer.js"],"names":["UserActionTypes","INITIAL_STATE","currentUser","errorMessage","userReducer","state","action","type","SIGN_IN_SUCCESS","payload","SIGN_IN_FAILURE","SIGN_OUT_FAILURE","SIGN_UP_FAILURE","SIGN_OUT_SUCCESS"],"mappings":";AAAA;AACA;AACA,OAAOA,eAAP,MAA4B,cAA5B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,WAAW,EAAE,IADO;AAEpBC,EAAAA,YAAY,EAAE;AAFM,CAAtB,C,CAKA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACF;AACI,SAAKP,eAAe,CAACQ,eAArB;AACE,+BACKH,KADL;AAEEH,QAAAA,WAAW,EAACI,MAAM,CAACG,OAFrB;AAGEN,QAAAA,YAAY,EAAE;AAHhB;;AAKF,SAAKH,eAAe,CAACU,eAArB;AACA,SAAKV,eAAe,CAACW,gBAArB;AACA,SAAKX,eAAe,CAACY,eAArB;AACE,+BACKP,KADL;AAEEF,QAAAA,YAAY,EAACG,MAAM,CAACG;AAFtB;;AAIF,SAAKT,eAAe,CAACa,gBAArB;AACE,+BACKR,KADL;AAEEH,QAAAA,WAAW,EAAC,IAFd;AAGEC,QAAAA,YAAY,EAAC;AAHf;;AAKN;;;;;;;AAMI;AACE,aAAOE,KAAP;AA5BJ;AA8BD,CA/BD;;AAiCA,eAAeD,WAAf","sourcesContent":["//aquí vamos a escribir toda la información del state relacionada con el usuario, y después se pasará a root-reducer.\n// es una función que recibe dos parametros, state inicial y el action (que es un objeto).\nimport UserActionTypes from './user.types';\n\nconst INITIAL_STATE = {\n  currentUser: null,\n  errorMessage: null\n}\n\n// se pasa el valor inicial al  state null, es como dar estructura de lo que será el state, y se inicia a cero o null en este caso. Parecido a como cuando se renderiza App, y cuando se monta, se le pasa el valor de User de auth. cuando se hace Login\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n// usando UserActionTypes, nos aseguramos de no cometer un error pasando el SET_CURRENT_USER sin errores de escritura.\n    case UserActionTypes.SIGN_IN_SUCCESS:\n      return {\n        ...state,\n        currentUser:action.payload,\n        errorMessage: null\n      };\n    case UserActionTypes.SIGN_IN_FAILURE:\n    case UserActionTypes.SIGN_OUT_FAILURE:\n    case UserActionTypes.SIGN_UP_FAILURE:\n      return {\n        ...state,\n        errorMessage:action.payload\n      };\n    case UserActionTypes.SIGN_OUT_SUCCESS:\n      return {\n        ...state,\n        currentUser:null,\n        errorMessage:null\n      };\n/*    case UserActionTypes.SIGN_UP_SUCCESS:\n      return {\n        ...state,\n        currentUser:action.payload,\n        errorMessage: null\n      };*/\n    default:\n      return state;\n  } \n}\n\nexport default userReducer;"]},"metadata":{},"sourceType":"module"}
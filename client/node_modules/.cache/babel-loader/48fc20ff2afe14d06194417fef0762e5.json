{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/client/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport { CollectionItemContainer, BackgroundImage, AddButton, CollectionFooterContainer, NameContainer, PriceContainer } from './collection-item.styles';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const name = item.name,\n        price = item.price,\n        imageUrl = item.imageUrl;\n  return React.createElement(CollectionItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(BackgroundImage, {\n    imageUrl: imageUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(CollectionFooterContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(NameContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, name), React.createElement(PriceContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, price)), React.createElement(AddButton, {\n    className: \"custom-button\",\n    onClick: () => addItem(item),\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n}); //ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\n\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","addItem","CollectionItemContainer","BackgroundImage","AddButton","CollectionFooterContainer","NameContainer","PriceContainer","CollectionItem","item","name","price","imageUrl","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAGA,SACCC,uBADD,EAECC,eAFD,EAGCC,SAHD,EAICC,yBAJD,EAKCC,aALD,EAMCC,cAND,QAOO,0BAPP;;AASA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOR,EAAAA;AAAP,CAAD,KAAqB;AAAA,QACnCS,IADmC,GACTD,IADS,CACnCC,IADmC;AAAA,QAC7BC,KAD6B,GACTF,IADS,CAC7BE,KAD6B;AAAA,QACtBC,QADsB,GACTH,IADS,CACtBG,QADsB;AAE3C,SACA,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,eAAD;AAAiB,IAAA,QAAQ,EAAEA,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC,oBAAC,yBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBF,IAAhB,CADD,EAEC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBC,KAAjB,CAFD,CAFD,EAMC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,eAArB;AAAqC,IAAA,OAAO,EAAE,MAAIV,OAAO,CAACQ,IAAD,CAAzD;AAAiE,IAAA,QAAQ,MAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAND,CADA;AAUC,CAZF;;AAcA,MAAMI,kBAAkB,GAAGC,QAAQ,KAAI;AACtCb,EAAAA,OAAO,EAACQ,IAAI,IAAIK,QAAQ,CAACb,OAAO,CAACQ,IAAD,CAAR;AADc,CAAJ,CAAnC,C,CAGA;;;AACA,eAAeT,OAAO,CAAC,IAAD,EAAMa,kBAAN,CAAP,CAAiCL,cAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\n\n\nimport {\n\tCollectionItemContainer,\n\tBackgroundImage,\n\tAddButton,\n\tCollectionFooterContainer,\n\tNameContainer,\n\tPriceContainer\n} from './collection-item.styles';\n\nconst CollectionItem = ({item, addItem}) => {\n\tconst { name, price, imageUrl } = item;\n\treturn (\n\t<CollectionItemContainer>\n\t\t<BackgroundImage imageUrl={imageUrl} />\n\t\t<CollectionFooterContainer>\n\t\t\t<NameContainer>{name}</NameContainer>\n\t\t\t<PriceContainer>{price}</PriceContainer>\n\t\t</CollectionFooterContainer>\n\t\t<AddButton className='custom-button' onClick={()=>addItem(item)} inverted>Add to cart</AddButton>\n\n  </CollectionItemContainer>\n)};\n\nconst mapDispatchToProps = dispatch =>({\n\taddItem:item => dispatch(addItem(item))\n});\n//ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\nexport default connect(null,mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}
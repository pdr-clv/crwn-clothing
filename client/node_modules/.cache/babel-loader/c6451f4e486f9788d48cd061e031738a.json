{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const userRef = yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch (err) {}\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart)]);\n}","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleProvider","auth","createUserProfileDocument","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","userRef","signInWithPopup","console","log","err","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAA+D,+BAA/D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP;AAOA,OAAO,UAAUC,gBAAV,GAA4B;AACjC,MAAG;AACD,UAAMC,OAAO,GAAE,MAAMR,IAAI,CAACS,eAAL,CAAqBV,cAArB,CAArB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACD,GAHD,CAGE,OAAMI,GAAN,EAAU,CAEX;AACF;AAED,OAAO,UAAUC,mBAAV,GAA+B;AACpC,QAAMlB,UAAU,CAACO,eAAe,CAACY,oBAAjB,EAAuCP,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUQ,SAAV,GAAqB;AAC1B,QAAMlB,GAAG,CAAC,CAACC,IAAI,CAACe,mBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import {takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils';\n\nimport UserActionTypes from './user.types';\n\nimport { \n  googleSignInSuccess, \n  googleSignInFailure,\n  emailSignInSuccess,\n  emailSignInFailure\n} from './user.actions';\n\nexport function* signInWithGoogle(){\n  try{\n    const userRef= yield auth.signInWithPopup(googleProvider);\n    console.log(userRef);\n  } catch(err){\n\n  }\n}\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas(){\n  yield all([call(onGoogleSignInStart)]);\n}\n"]},"metadata":{},"sourceType":"module"}
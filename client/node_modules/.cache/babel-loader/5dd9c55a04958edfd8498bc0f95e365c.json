{"ast":null,"code":"import _objectSpread from \"/home/pdrclv/react/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport CartActionTypes from './cart.types';\nimport { addItemToCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n}; // como es habitual, se le asigna un initial state, si no se le pasa ningun state.\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      // como va a ser toggle, no hace falta pasarle ningun parametro ni payload para modificar el state. se har치 con un !state.\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        //de esta forma poniendo el ...state.cartItems, el array cartItems conserva todos los cartItems que tiene, y a침ade el payload\n        cartItems: [...state.cartItems, action.payload]\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,SAAS,EAAE;AAFS,CAAtB,C,CAIA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,eAAe,CAACS,kBAArB;AACJ;AACM,+BACKH,KADL;AAEEH,QAAAA,MAAM,EAAC,CAACG,KAAK,CAACH;AAFhB;;AAIF,SAAKH,eAAe,CAACU,QAArB;AACG,+BACIJ,KADJ;AAEP;AACQF,QAAAA,SAAS,EAAC,CAAC,GAAGE,KAAK,CAACF,SAAV,EAAqBG,MAAM,CAACI,OAA5B;AAHX;;AAKH;AACE,aAAOL,KAAP;AAdJ;AAgBD,CAjBD;;AAmBA,eAAeD,WAAf","sourcesContent":["import CartActionTypes from './cart.types';\nimport { addItemToCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n// como es habitual, se le asigna un initial state, si no se le pasa ningun state.\nconst cartReducer = (state = INITIAL_STATE,action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n// como va a ser toggle, no hace falta pasarle ningun parametro ni payload para modificar el state. se har치 con un !state.\n      return {\n        ...state,\n        hidden:!state.hidden\n      };\n    case CartActionTypes.ADD_ITEM:\n       return {\n        ...state,\n//de esta forma poniendo el ...state.cartItems, el array cartItems conserva todos los cartItems que tiene, y a침ade el payload\n        cartItems:[...state.cartItems, action.payload]\n      };\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}
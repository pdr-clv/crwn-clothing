{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux'; //middleware son funciones que se ejecutan cuando se recoge un action. Es un paso previo al reducer.\n\nimport { persistStore } from 'redux-persist'; //vamos a importar persistStore, para poder almacenar el state/store en una variable local o de Session, y para que cuando se refresque la página web, no se nos vaya los datos que hay en el state en ese momento. redux-persist nos permite utilizar estas funciones de localStore y sessionStore, nativas de javascript\n\nimport logger from 'redux-logger'; //logger será donde se almacene el middleware\n\nimport rootReducer from './root-reducer';\nconst middlewares = [logger];\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares)); //persistor es una variante persistente de nuestro store, que permanecerá guardada en localStore\n\nexport const persistor = persistStore(store); //export default { store, persistor };\n//este store hay que pasarlo a Provider (componente que envuelve toda la aplicación), que está en index.js","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","rootReducer","middlewares","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C,C,CACA;;AACA,SAASC,YAAT,QAA6B,eAA7B,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,WAAW,GAAG,CAACF,MAAD,CAApB;AAEA,OAAO,MAAMG,KAAK,GAAGN,WAAW,CAACI,WAAD,EAAcH,eAAe,CAAC,GAAGI,WAAJ,CAA7B,CAAzB,C,CACP;;AACA,OAAO,MAAME,SAAS,GAAGL,YAAY,CAACI,KAAD,CAA9B,C,CAEP;AAEA","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\n//middleware son funciones que se ejecutan cuando se recoge un action. Es un paso previo al reducer.\nimport { persistStore } from 'redux-persist';\n//vamos a importar persistStore, para poder almacenar el state/store en una variable local o de Session, y para que cuando se refresque la página web, no se nos vaya los datos que hay en el state en ese momento. redux-persist nos permite utilizar estas funciones de localStore y sessionStore, nativas de javascript\n\nimport logger from 'redux-logger';\n//logger será donde se almacene el middleware\nimport rootReducer from './root-reducer';\n\nconst middlewares = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\n//persistor es una variante persistente de nuestro store, que permanecerá guardada en localStore\nexport const persistor = persistStore(store);\n\n//export default { store, persistor };\n\n//este store hay que pasarlo a Provider (componente que envuelve toda la aplicación), que está en index.js\n\n"]},"metadata":{},"sourceType":"module"}
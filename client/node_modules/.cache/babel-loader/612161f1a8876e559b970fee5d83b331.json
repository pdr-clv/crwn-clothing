{"ast":null,"code":"import _objectSpread from \"/home/pdrclv/react/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions'; //cuando se hace yield en onEmailSignInStart, se captura toda la action, y se tiene acceso como parametro al payload en este funci贸n de a continuaci贸n.\n\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  yield console.log(email, password);\n  /*  try{\n      const { user } = yield auth.signInWithEmailAndPassword(email, password);\n      const userRef = yield call(createUserProfileDocument, user);\n      const userSnapShot = yield userRef.get();\n      console.log(userSnapShot);\n      yield put (emailSignInSuccess({id:userSnapShot.id, ...userSnapShot.data()}));\n    } catch(err){\n      put(emailSignInFailure(err));\n    }*/\n}\nexport function* signInWithGoogle() {\n  try {\n    //    const userRef= yield auth.signInWithPopup(googleProvider);\n    // lo desestructuramos el objeto userRef, y cogemos la propiedad user\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    console.log(userSnapShot);\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapShot.id\n    }, userSnapShot.data())));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","googleProvider","auth","createUserProfileDocument","UserActionTypes","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithEmail","payload","email","password","console","log","signInWithGoogle","signInWithPopup","user","userRef","userSnapShot","get","id","data","err","onEmailSignInStart","EMAIL_SIGN_IN_START","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAAQA,UAAR,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,oBAA1C;AAEA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAA+D,+BAA/D;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,kBAJF,QAKO,gBALP,C,CAOA;;AACA,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAT,CAA1B,EAAwD;AAC7D,QAAMC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,QAAlB,CAAN;AACF;;;;;;;;;AASC;AAED,OAAO,UAAUG,gBAAV,GAA4B;AACjC,MAAG;AACL;AACA;AAFK,iBAGgB,MAAMb,IAAI,CAACc,eAAL,CAAqBf,cAArB,CAHtB;AAAA,UAGOgB,IAHP,QAGOA,IAHP;;AAID,UAAMC,OAAO,GAAG,MAAMlB,IAAI,CAACG,yBAAD,EAA4Bc,IAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,UAAMrB,GAAG,CAAEO,mBAAmB;AAAEgB,MAAAA,EAAE,EAACF,YAAY,CAACE;AAAlB,OAAyBF,YAAY,CAACG,IAAb,EAAzB,EAArB,CAAT;AACD,GARD,CAQE,OAAMC,GAAN,EAAU;AACV,UAAMzB,GAAG,CAAEQ,mBAAmB,CAACiB,GAAD,CAArB,CAAT;AACD;AACF;AAED,OAAO,UAAUC,kBAAV,GAA8B;AACnC,QAAM3B,UAAU,CAACO,eAAe,CAACqB,mBAAjB,EAAsChB,eAAtC,CAAhB;AACD;AAED,OAAO,UAAUiB,mBAAV,GAA+B;AACpC,QAAM7B,UAAU,CAACO,eAAe,CAACuB,oBAAjB,EAAuCZ,gBAAvC,CAAhB;AACD;AAED,OAAO,UAAUa,SAAV,GAAqB;AAC1B,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAAC0B,mBAAD,CAAL,EACR1B,IAAI,CAACwB,kBAAD,CADI,CAAD,CAAT;AAGD","sourcesContent":["import {takeLatest, put, all, call } from 'redux-saga/effects';\n\nimport { googleProvider, auth, createUserProfileDocument} from '../../firebase/firebase.utils';\n\nimport UserActionTypes from './user.types';\n\nimport { \n  googleSignInSuccess, \n  googleSignInFailure,\n  emailSignInSuccess,\n  emailSignInFailure\n} from './user.actions';\n\n//cuando se hace yield en onEmailSignInStart, se captura toda la action, y se tiene acceso como parametro al payload en este funci贸n de a continuaci贸n.\nexport function* signInWithEmail({payload:{ email, password }}){\n  yield console.log(email,password);\n/*  try{\n    const { user } = yield auth.signInWithEmailAndPassword(email, password);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    console.log(userSnapShot);\n    yield put (emailSignInSuccess({id:userSnapShot.id, ...userSnapShot.data()}));\n  } catch(err){\n    put(emailSignInFailure(err));\n  }*/\n}\n\nexport function* signInWithGoogle(){\n  try{\n//    const userRef= yield auth.signInWithPopup(googleProvider);\n// lo desestructuramos el objeto userRef, y cogemos la propiedad user\n    const { user } = yield auth.signInWithPopup(googleProvider);\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapShot = yield userRef.get();\n    console.log(userSnapShot);\n    yield put (googleSignInSuccess({id:userSnapShot.id, ...userSnapShot.data()}));\n  } catch(err){\n    yield put (googleSignInFailure(err));\n  }\n}\n\nexport function* onEmailSignInStart(){\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onGoogleSignInStart(){\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* userSagas(){\n  yield all([call(onGoogleSignInStart),\n    call(onEmailSignInStart)\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}
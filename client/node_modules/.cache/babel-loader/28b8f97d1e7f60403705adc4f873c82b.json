{"ast":null,"code":"import styled from 'styled-components'; //importamos styled, para dar estilo a los componentes, se puede hacer directamente \n//importamos {css} para generar un bloque de estilos, y asignarlo después a un componente de una forma indirecta, pero se puede duplicar el mismo bloque de estilos para otros componentes, se utilizará en Link option y div option.\n//no se utiliza porque utilizaremos la propiedad as='div' cuando llamemos a OptionLink.\n\nimport { Link } from 'react-router-dom';\nexport const HeaderContainer = styled.div`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 25px;\n\n  @media screen and (max-width:800px) {\n    height: 60px;\n    padding: 10px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (max-width:480px) {\n    height: 55px;\n    padding: 5px;\n    margin-bottom: 15px;\n  }\n`; // para poder dar estilo a un componente propio de react, se tiene que llamar así, no podemos poner styled.Link''\n\nexport const LogoContainer = styled(Link)`\n  height: 100%;\n  width: 70px;\n  padding: 25px;\n\n  @media screen and (max-width:800px) {\n    width: 50px;\n    padding: 0;\n  }\n`;\nexport const OptionsContainer = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  @media screen and (max-width:800px) {\n    width: 75%;\n  }\n`; // existe la opción de generar unicamente un OptionLink, pero cuando se llama al componente, se puede incluir as='div', y tendrá las propiedades de OptionLink, pero el componente se comportará como un link, así nos evitamos generar el componente OptionDiv, que es necesario para SIGN IN o SIGN OUT\n\nexport const OptionLink = styled(Link)`\n  padding: 10px 15px;\n  cursor: pointer;\n  @media screen and (max-width:480px) {\n    font-size:12px;\n    padding: 8px;\n  }\n`;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/components/header/header.styles.jsx"],"names":["styled","Link","HeaderContainer","div","LogoContainer","OptionsContainer","OptionLink"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB,C,CACA;AACA;AACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AAGA,OAAO,MAAMC,eAAe,GAAGF,MAAM,CAACG,GAAI;;;;;;;;;;;;;;;;;;CAAnC,C,CAmBP;;AACA,OAAO,MAAMC,aAAa,GAAGJ,MAAM,CAACC,IAAD,CAAO;;;;;;;;;CAAnC;AAWP,OAAO,MAAMI,gBAAgB,GAAGL,MAAM,CAACG,GAAI;;;;;;;;;;CAApC,C,CAWP;;AACA,OAAO,MAAMG,UAAU,GAAGN,MAAM,CAACC,IAAD,CAAO;;;;;;;CAAhC","sourcesContent":["import styled from 'styled-components';\n//importamos styled, para dar estilo a los componentes, se puede hacer directamente \n//importamos {css} para generar un bloque de estilos, y asignarlo después a un componente de una forma indirecta, pero se puede duplicar el mismo bloque de estilos para otros componentes, se utilizará en Link option y div option.\n//no se utiliza porque utilizaremos la propiedad as='div' cuando llamemos a OptionLink.\nimport { Link } from 'react-router-dom';\n\n\nexport const HeaderContainer = styled.div`\n  height: 70px;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 25px;\n\n  @media screen and (max-width:800px) {\n    height: 60px;\n    padding: 10px;\n    margin-bottom: 20px;\n  }\n\n  @media screen and (max-width:480px) {\n    height: 55px;\n    padding: 5px;\n    margin-bottom: 15px;\n  }\n`;\n// para poder dar estilo a un componente propio de react, se tiene que llamar así, no podemos poner styled.Link''\nexport const LogoContainer = styled(Link)`\n  height: 100%;\n  width: 70px;\n  padding: 25px;\n\n  @media screen and (max-width:800px) {\n    width: 50px;\n    padding: 0;\n  }\n`;\n\nexport const OptionsContainer = styled.div`\n  width: 50%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n\n  @media screen and (max-width:800px) {\n    width: 75%;\n  }\n`;\n// existe la opción de generar unicamente un OptionLink, pero cuando se llama al componente, se puede incluir as='div', y tendrá las propiedades de OptionLink, pero el componente se comportará como un link, así nos evitamos generar el componente OptionDiv, que es necesario para SIGN IN o SIGN OUT\nexport const OptionLink = styled(Link)`\n  padding: 10px 15px;\n  cursor: pointer;\n  @media screen and (max-width:480px) {\n    font-size:12px;\n    padding: 8px;\n  }\n`;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({\n  id,\n  name,\n  price,\n  imageUrl,\n  addItem\n}) => {\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, price)), React.createElement(CustomButton, {\n    inverted: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Add to cart\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItem: item => dispatch(addItem(item))\n}); //ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\n\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/components/collection-item/collection-item.component.jsx"],"names":["React","CustomButton","connect","addItem","CollectionItem","id","name","price","imageUrl","backgroundImage","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AAEA,OAAO,+BAAP;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,IAAL;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,QAAlB;AAA4BL,EAAAA;AAA5B,CAAD,KAA0C;AAEhE,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,OAAf;AACC,IAAA,KAAK,EAAE;AACPM,MAAAA,eAAe,EAAE,OAAMD,QAAS;AADzB,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAMC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBF,IAAvB,CADD,EAEC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,KAAxB,CAFD,CAND,EAUC,oBAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVD,CADA;AAcC,CAhBF;;AAkBA,MAAMG,kBAAkB,GAAGC,QAAQ,KAAI;AACtCR,EAAAA,OAAO,EAACS,IAAI,IAAID,QAAQ,CAACR,OAAO,CAACS,IAAD,CAAR;AADc,CAAJ,CAAnC,C,CAGA;;;AACA,eAAeV,OAAO,CAAC,IAAD,EAAMQ,kBAAN,CAAP,CAAiCN,cAAjC,CAAf","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { connect } from 'react-redux';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nimport './collection-item.styles.scss';\n\nconst CollectionItem = ({id, name, price, imageUrl, addItem}) => {\n\t\n\treturn (\n\t<div className='collection-item'>\n\t\t<div className='image' \n\t\t\tstyle={{\n\t\t\tbackgroundImage:`url(${imageUrl})`\n\t\t}}\n\t\t/>\n\t\t<div className='collection-footer'>\n\t\t\t<div className='name'>{name}</div>\n\t\t\t<div className='price'>{price}</div>\n\t\t</div>\n\t\t<CustomButton inverted>Add to cart</CustomButton>\n\n  </div>\n)};\n\nconst mapDispatchToProps = dispatch =>({\n\taddItem:item => dispatch(addItem(item))\n});\n//ahora podemos utilizar la función addItem para enviar el item en el payload al estado cart.\nexport default connect(null,mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component'; //hará falta firestore para poder conectarse a firebase.\n\nimport { firestore } from '../../firebase/firebase.utils'; //ahora que shopPage está completamente desligado de props. Vamos a enrutarla, y añadirle rutas. \n\nimport { Route } from 'react-router-dom';\n/*  // forma primitiva, se llamaba así antes de incluir el listado shop en el state/store\nclass ShopPage extends React.Component{\n\tconstructor (props){\n\t\tsuper(props);\n\n\t\tthis.state = {collections:SHOP_DATA}\n\t}\n\n\trender(){\n\t\t//console.log(this.state); vemos que cargar this.state correctamente.\n\t\t// se pasa el valor this.state la variable {collections} brakets porque es objeto (D-structuring) a una variable collections, y se procesará cuando se llame al componente CollectionsPreview \n\t\tconst {collections} = this.state;\n\t\treturn (<div className='shop-page'>\n\t\t\t{collections.map(({id , ...otherCollectionsProps})=>(\n\t\t\t\t<CollectionPreview key={id} {...otherCollectionsProps} />\n\t\t\t))}\t\n\t\t</div>);\n\t}\n} */\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    // cargaremos la colección de 'collections' que es la que tiene la información de de los objetos de collections, y se puede acceder a toda esa información haciendo docs.\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      console.log(snapshot);\n    });\n  }\n\n  render() {\n    // tenemos acceso a las propiedades match, porque viene de una página enroutada de Página principal.\n    // match.path tiene la información de la ruta donde está la página, y no hace falta escribirla manualmente. Así este componente es movible.\n    // hcemos una desestructuración de match en this.props, para que sea mas entendible cuando lo llamemos mas adelante.\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ShopPage;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverview","CollectionPage","firestore","Route","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","console","log","render","match","props","path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AAEA,OAAOC,cAAP,MAA2B,oCAA3B,C,CACA;;AACA,SAASC,SAAT,QAA0B,+BAA1B,C,CAEA;;AAEA,SAASC,KAAT,QAAsB,kBAAtB;AAGA;;;;;;;;;;;;;;;;;;;;AAqBA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAItCC,uBAJsC,GAId,IAJc;AAAA;;AAMtCC,EAAAA,iBAAiB,GAAE;AACpB;AAEE,UAAMC,aAAa,GAACN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAApB;AAEAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AAC1CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,KAFD;AAGA;;AAEDG,EAAAA,MAAM,GAAE;AACT;AACA;AACA;AAHS,UAICC,KAJD,GAIS,KAAKC,KAJd,CAICD,KAJD;AAKP,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEA,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEe,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CADD;AAOA;;AA5BqC;;AAiCvC,eAAeG,QAAf","sourcesContent":["import React from 'react';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\n\nimport CollectionPage from '../collection/collection.component';\n//hará falta firestore para poder conectarse a firebase.\nimport { firestore } from '../../firebase/firebase.utils';\n\n//ahora que shopPage está completamente desligado de props. Vamos a enrutarla, y añadirle rutas. \n\nimport { Route } from 'react-router-dom';\n\n\n/*  // forma primitiva, se llamaba así antes de incluir el listado shop en el state/store\nclass ShopPage extends React.Component{\n\tconstructor (props){\n\t\tsuper(props);\n\n\t\tthis.state = {collections:SHOP_DATA}\n\t}\n\n\trender(){\n\t\t//console.log(this.state); vemos que cargar this.state correctamente.\n\t\t// se pasa el valor this.state la variable {collections} brakets porque es objeto (D-structuring) a una variable collections, y se procesará cuando se llame al componente CollectionsPreview \n\t\tconst {collections} = this.state;\n\t\treturn (<div className='shop-page'>\n\t\t\t{collections.map(({id , ...otherCollectionsProps})=>(\n\t\t\t\t<CollectionPreview key={id} {...otherCollectionsProps} />\n\t\t\t))}\t\n\t\t</div>);\n\t}\n} */\n\n\nclass ShopPage extends React.Component {\n// se hará fetch de la información de bakcend de collections en este componente, ya que es el componente padre de todos los hijos que utilizarán el redux del store del state collections.\n// cuando el componente se monte, cargaremos desde el backend la información a redux.\n// para empezar, se hace unsubscribe = null, para que cuando se desmonte el componente, rompa la conexión con el backend (con la referencia de firebase), y no ocupar memoria, ni que haya fuga de memoria \"memory leak\"\n\tunsubscribeFromSnapshot=null;\n\n\tcomponentDidMount(){\n// cargaremos la colección de 'collections' que es la que tiene la información de de los objetos de collections, y se puede acceder a toda esa información haciendo docs.\n\n\t\tconst collectionRef=firestore.collection('collections');\n\n\t\tcollectionRef.onSnapshot(async snapshot => {\n\t\t\tconsole.log(snapshot)\n\t\t});\n\t}\n\n\trender(){\n// tenemos acceso a las propiedades match, porque viene de una página enroutada de Página principal.\n// match.path tiene la información de la ruta donde está la página, y no hace falta escribirla manualmente. Así este componente es movible.\n// hcemos una desestructuración de match en this.props, para que sea mas entendible cuando lo llamemos mas adelante.\n\t\tconst { match }=this.props;\n\t\treturn (\n\t\t\t<div className='shop-page'>\n\t\t\t\t<Route exact path={`${match.path}`} component={CollectionsOverview} />\n\t\t\t\t<Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n\t\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\n\nexport default ShopPage;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"// es un componente de orden superior, es el contenedor que envolverá todo el componente collections-overview, y se obtendrá las propiedades del state para cargarlas como props al componente, y no hará falta hacerlo en el componente shop.component.\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'; // permite componer sucesiones de funciones y componentes de orden superior, y se ven de una forma mas clara.\n\nimport { createStructuredSelector } from 'reselect'; // para seleccionar y vincular los valores del state de redux.\n\nimport { selectIsCollectionsLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'; //a su vez WithSpinner es otro componente de orden superior, haremos un doble componente de orden superior, pero es completamente válido.\n\nimport CollectionPage from './collection.component';\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state) //no entiendo porque aquí, no se carga directamente el selector, se utiliza el state como parametro de función, y se pasa a selectIsCollectionsLoaded. Se tiene que invertir, porque aquí tiene que ser falsa la propiedad isLoading en WithSpinner.\n\n}); // es perfectamente válido concatenar componentes y funciones como a continuación, pero para que sea mas fácil ver las funciones y componentes concatenadas se utiliza \n//const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\n\nconst CollectionPageContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionPage);\nexport default CollectionPageContainer;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/pages/collection/collection.container.jsx"],"names":["connect","compose","createStructuredSelector","selectIsCollectionsLoaded","WithSpinner","CollectionPage","mapStateToProps","isLoading","state","CollectionPageContainer"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAAgC;;AAEhC,SAASC,wBAAT,QAAyC,UAAzC,C,CAAqD;;AACrD,SAASC,yBAAT,QAAyC,iCAAzC;AACA,OAAOC,WAAP,MAAwB,sDAAxB,C,CACA;;AACA,OAAOC,cAAP,MAA4B,wBAA5B;AAEA,MAAMC,eAAe,GAAGJ,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAEC,KAAK,IAAI,CAACL,yBAAyB,CAACK,KAAD,CADC,CAEjD;;AAFiD,CAAD,CAAhD,C,CAKA;AACA;;AAEA,MAAMC,uBAAuB,GAAGR,OAAO,CACrCD,OAAO,CAACM,eAAD,CAD8B,EAErCF,WAFqC,CAAP,CAG9BC,cAH8B,CAAhC;AAKA,eAAeI,uBAAf","sourcesContent":["// es un componente de orden superior, es el contenedor que envolverá todo el componente collections-overview, y se obtendrá las propiedades del state para cargarlas como props al componente, y no hará falta hacerlo en el componente shop.component.\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';// permite componer sucesiones de funciones y componentes de orden superior, y se ven de una forma mas clara.\n\nimport { createStructuredSelector } from 'reselect'; // para seleccionar y vincular los valores del state de redux.\nimport { selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n//a su vez WithSpinner es otro componente de orden superior, haremos un doble componente de orden superior, pero es completamente válido.\nimport CollectionPage  from './collection.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: state => !selectIsCollectionsLoaded(state)\n//no entiendo porque aquí, no se carga directamente el selector, se utiliza el state como parametro de función, y se pasa a selectIsCollectionsLoaded. Se tiene que invertir, porque aquí tiene que ser falsa la propiedad isLoading en WithSpinner.\n});\n\n// es perfectamente válido concatenar componentes y funciones como a continuación, pero para que sea mas fácil ver las funciones y componentes concatenadas se utiliza \n//const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\n\nconst CollectionPageContainer = compose (\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionPage);\n\nexport default CollectionPageContainer;"]},"metadata":{},"sourceType":"module"}
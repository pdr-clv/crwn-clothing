{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/components/header/header.component.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/corona.svg\";\nimport './header.styles.scss';\n\nconst Header = ({\n  currentUser,\n  hidden\n}) => React.createElement(\"div\", {\n  className: \"header\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"logo-container\",\n  to: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, React.createElement(Logo, {\n  className: \"logo\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n})), React.createElement(\"div\", {\n  className: \"options\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, \"SHOP\"), React.createElement(Link, {\n  className: \"option\",\n  to: \"/shop\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, \"CONTACT\"), currentUser ? React.createElement(\"div\", {\n  className: \"option\",\n  onClick: () => auth.signOut(),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27\n  },\n  __self: this\n}, \"SIGN OUT\") : React.createElement(Link, {\n  className: \"option\",\n  to: \"/signin\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, \"SIGN IN\"), React.createElement(CartIcon, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n})), hidden ? null : React.createElement(CartDropdown, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n})); //esta función es conveniente llamarla siempre igual. state es el argumento, el currentUser será state.user(que está en el root-reducer).currentUser(que está en el user-reducer)\n\n/*const mapStateToProps = state => ({\n\tcurrentUser: state.user.currentUser\n});*/\n// así es como se llamó la primera vez, cuando tienes que coger varias propiedades del state que hay en el store o en el root-reducer, se puede hacer desesctructuración.\n\n\nconst mapStateToProps = ({\n  user: {\n    currentUser\n  },\n  cart: {\n    hidden\n  }\n}) => ({\n  currentUser,\n  hidden\n}); //connect es una función de orden superior de la libreria react-redux, que se le puede pasar el componente Header, y obtiene otro componente nuevo.\n//connect es la función que nos ayudará a acceder al estado en el store con ayuda del reducer.\n// mapStateToProps coge el estado que está en root-reducer, y se accede a user de root-reducer, y después a currentUser que está en el user.reducer.\n// con este mapStateToProps podemos acceder al valor currentUser, y es el que se pasará como argumento a la propiedad currentUser a <Header currentUser={currentUser}</> \n\n\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/components/header/header.component.jsx"],"names":["React","Link","connect","auth","CartIcon","CartDropdown","Header","currentUser","hidden","signOut","mapStateToProps","user","cart"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;;AAIA,OAAO,sBAAP;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAcC,EAAAA;AAAd,CAAD,KACd;AAAK,EAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,gBAAhB;AAAiC,EAAA,EAAE,EAAC,GAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADD,CADD,EAIC;AAAK,EAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAIC,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,OAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJD,EAQED,WAAW,GACX;AAAK,EAAA,SAAS,EAAC,QAAf;AAAwB,EAAA,OAAO,EAAE,MAAIJ,IAAI,CAACM,OAAL,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADW,GAGX,oBAAC,IAAD;AAAM,EAAA,SAAS,EAAC,QAAhB;AAAyB,EAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAXF,EAcC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAdD,CAJD,EAqBED,MAAM,GACN,IADM,GAEL,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAvBH,CADD,C,CA8BA;;AAEA;;;AAEM;;;AAEN,MAAME,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAACJ,IAAAA;AAAD,GAAR;AAAuBK,EAAAA,IAAI,EAAC;AAACJ,IAAAA;AAAD;AAA5B,CAAD,MAA4C;AACnED,EAAAA,WADmE;AAEnEC,EAAAA;AAFmE,CAA5C,CAAxB,C,CAKA;AACA;AACA;AACA;;;AACA,eAAeN,OAAO,CAACQ,eAAD,CAAP,CAAyBJ,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { auth } from '../../firebase/firebase.utils';\nimport CartIcon from '../cart-icon/cart-icon.component';\nimport CartDropdown from '../cart-dropdown/cart-dropdown.component';\n\nimport { ReactComponent as Logo} from '../../assets/corona.svg';\n\nimport './header.styles.scss';\n\n\nconst Header = ({ currentUser,hidden }) => (\n\t<div className='header'>\n\t\t<Link className='logo-container' to='/'>\n\t\t\t<Logo className='logo' />\n\t\t</Link>\n\t\t<div className='options'>\n\t\t\t<Link className='option' to='/shop'>\n\t\t\t\tSHOP\n\t\t\t</Link>\n\t\t\t<Link className='option' to='/shop'>\n\t\t\t\tCONTACT\n\t\t\t</Link>\n\t\t\t{\n\t\t\t\tcurrentUser ?\n\t\t\t\t<div className='option' onClick={()=>auth.signOut()}>SIGN OUT</div>\n\t\t\t\t:\n\t\t\t\t<Link className='option' to='/signin'>SIGN IN</Link>\n\n\t\t\t}\n\t\t\t<CartIcon />\n\t\t</div>\n\t\t{\n\t\t\thidden ?\n\t\t\tnull:\n\t\t\t(<CartDropdown />)\n\t\t}\n\t</div>\n);\n\n\n//esta función es conveniente llamarla siempre igual. state es el argumento, el currentUser será state.user(que está en el root-reducer).currentUser(que está en el user-reducer)\n\n/*const mapStateToProps = state => ({\n\tcurrentUser: state.user.currentUser\n});*/ // así es como se llamó la primera vez, cuando tienes que coger varias propiedades del state que hay en el store o en el root-reducer, se puede hacer desesctructuración.\n\nconst mapStateToProps = ({ user: {currentUser}, cart:{hidden}}) => ({\n\tcurrentUser,\n\thidden\n});\n\n//connect es una función de orden superior de la libreria react-redux, que se le puede pasar el componente Header, y obtiene otro componente nuevo.\n//connect es la función que nos ayudará a acceder al estado en el store con ayuda del reducer.\n// mapStateToProps coge el estado que está en root-reducer, y se accede a user de root-reducer, y después a currentUser que está en el user.reducer.\n// con este mapStateToProps podemos acceder al valor currentUser, y es el que se pasará como argumento a la propiedad currentUser a <Header currentUser={currentUser}</> \nexport default connect(mapStateToProps)(Header);"]},"metadata":{},"sourceType":"module"}
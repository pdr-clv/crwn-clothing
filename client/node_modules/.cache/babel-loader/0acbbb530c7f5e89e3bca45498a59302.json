{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/components/collection-preview/collection-preview.component.jsx\";\nimport React from 'react';\nimport CollectionItem from '../collection-item/collection-item.component';\nimport { CollectionPreviewContainer, PreviewContainer, TitleContainer } from './collection-preview.styles';\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({\n  title,\n  items\n}) => React.createElement(CollectionPreviewContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14\n  },\n  __self: this\n}, React.createElement(TitleContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}, title.toUpperCase()), React.createElement(PreviewContainer, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n}, //filter a solo los cuatro primeros items, y después se hace un mpa para que ponga el nombre de cada item\n//items.filter((item,idx)=> idx < 4).map(({id, ...otherItemsProps}) =>(\n//<CollectionItem key={id} {...otherItemsProps}/>\n//al necesitar el item entero en el collection-item para enviarlo al state, se cambia la forma de pasar las props a cart-item. Hay que pasar el item entero, sin hace desestructuración.\nitems.filter((item, idx) => idx < 4).map(item => React.createElement(CollectionItem, {\n  key: item.id,\n  item: item,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}))));\n\nexport default CollectionPreview;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/components/collection-preview/collection-preview.component.jsx"],"names":["React","CollectionItem","CollectionPreviewContainer","PreviewContainer","TitleContainer","CollectionPreview","title","items","toUpperCase","filter","item","idx","map","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8CAA3B;AAGA,SACCC,0BADD,EAECC,gBAFD,EAGCC,cAHD,QAIO,6BAJP;AAMA,OAAO,kCAAP;;AAEA,MAAMC,iBAAiB,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KACzB,oBAAC,0BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiBD,KAAK,CAACE,WAAN,EAAjB,CADD,EAEC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AACD;AACA;AACH;AACID,KAAK,CAACE,MAAN,CAAa,CAACC,IAAD,EAAMC,GAAN,KAAaA,GAAG,GAAG,CAAhC,EAAmCC,GAAnC,CAAuCF,IAAI,IAC3C,oBAAC,cAAD;AAAgB,EAAA,GAAG,EAAEA,IAAI,CAACG,EAA1B;AAA8B,EAAA,IAAI,EAAEH,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADA,CALF,CAFD,CADD;;AAeA,eAAeL,iBAAf","sourcesContent":["import React from 'react';\nimport CollectionItem from '../collection-item/collection-item.component';\n\n\nimport { \n\tCollectionPreviewContainer,\n\tPreviewContainer,\n\tTitleContainer\n} from './collection-preview.styles';\n\nimport './collection-preview.styles.scss';\n\nconst CollectionPreview = ({title, items}) => (\n\t<CollectionPreviewContainer>\n\t\t<TitleContainer>{title.toUpperCase()}</TitleContainer>\n\t\t<PreviewContainer>\n\t\t\t{//filter a solo los cuatro primeros items, y después se hace un mpa para que ponga el nombre de cada item\n\t\t\t//items.filter((item,idx)=> idx < 4).map(({id, ...otherItemsProps}) =>(\n\t\t\t//<CollectionItem key={id} {...otherItemsProps}/>\n//al necesitar el item entero en el collection-item para enviarlo al state, se cambia la forma de pasar las props a cart-item. Hay que pasar el item entero, sin hace desestructuración.\n\t\t\t\titems.filter((item,idx)=> idx < 4).map(item =>(\n\t\t\t\t<CollectionItem key={item.id} item={item}/>\n\t\t\t))}\n\t\t</PreviewContainer>\n\t</CollectionPreviewContainer>\n);\n\nexport default CollectionPreview;"]},"metadata":{},"sourceType":"module"}
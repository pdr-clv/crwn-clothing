{"ast":null,"code":"import _objectSpread from \"/home/pdrclv/react/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/pdrclv/react/crwn-clothing/src/App.js\";\nimport React from 'react'; //capitulo 67: propiedades match,location y history. Muy interesante para ver como dirigirse a las rutas y url, utilizando history, :id, etc.\n\nimport { Route, Switch } from 'react-router-dom'; // Route permite que se pueda hacer paginacion e ir a los /algo.\n//Switch se encarga de que en cuanto coincida una, ya no busque mas /algo\n\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n    this.state = {\n      currentUser: null\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        userRef.onSnapshot(snapShot => {\n          this.setState({\n            currentUser: _objectSpread({\n              id: snapShot.id\n            }, snapShot.data())\n          });\n        });\n      } else {\n        this.setState({\n          currentUser: userAuth\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  } // para que funcione Swtich, hay que envolver Route\n  //Route necesita los parametros exact (tiene que ser exacto el /),path, que es la ruta que estará ingresada en el url, y component que es el componente (que normalmente será una página creada por nosotros, que se cargará)\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Header, {\n      currentUser: this.state.currentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/signin\",\n      component: SignInAndSignUpPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/App.js"],"names":["React","Route","Switch","HomePage","ShopPage","Header","SignInAndSignUpPage","auth","createUserProfileDocument","App","Component","constructor","unsubscribeFromAuth","state","currentUser","componentDidMount","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","setState","id","data","componentWillUnmount","render"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,KAAT,EAAeC,MAAf,QAA6B,kBAA7B,C,CAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,qCAArB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,mBAAP,MAAgC,2DAAhC;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD;AAEA,OAAO,WAAP;;AAGA,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AADY,SAOdC,mBAPc,GAOQ,IAPR;AAEZ,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAIDC,EAAAA,iBAAiB,GAAE;AACjB,SAAKH,mBAAL,GAA2BL,IAAI,CAACS,kBAAL,CAAwB,MAAMC,QAAN,IAAiB;AAClE,UAAIA,QAAJ,EAAc;AACZ,cAAMC,OAAO,GAAG,MAAMV,yBAAyB,CAACS,QAAD,CAA/C;AAEAC,QAAAA,OAAO,CAACC,UAAR,CAAmBC,QAAQ,IAAG;AAC5B,eAAKC,QAAL,CAAc;AACZP,YAAAA,WAAW;AACTQ,cAAAA,EAAE,EAACF,QAAQ,CAACE;AADH,eAENF,QAAQ,CAACG,IAAT,EAFM;AADC,WAAd;AAMD,SAPD;AAQD,OAXD,MAWO;AACL,aAAKF,QAAL,CAAc;AAACP,UAAAA,WAAW,EAACG;AAAb,SAAd;AACD;AACF,KAf0B,CAA3B;AAgBD;;AAEDO,EAAAA,oBAAoB,GAAE;AACpB,SAAKZ,mBAAL;AACD,GA/B+B,CAgClC;AACA;;;AACEa,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEX,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,SAAS,EAAEE,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFF,CADF;AAUD;;AA7C+B;;AAgDlC,eAAeG,GAAf","sourcesContent":["import React from 'react';\n//capitulo 67: propiedades match,location y history. Muy interesante para ver como dirigirse a las rutas y url, utilizando history, :id, etc.\nimport { Route,Switch } from 'react-router-dom';\n\n// Route permite que se pueda hacer paginacion e ir a los /algo.\n//Switch se encarga de que en cuanto coincida una, ya no busque mas /algo\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\n\nimport './App.css';\n\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentUser: null\n    }\n  }\n\n  unsubscribeFromAuth = null\n\n  componentDidMount(){\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth =>{\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        \n        userRef.onSnapshot(snapShot =>{\n          this.setState({\n            currentUser:{\n              id:snapShot.id,\n              ...snapShot.data()\n            }\n          })\n        });\n      } else {\n        this.setState({currentUser:userAuth});\n      } \n    });\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n// para que funcione Swtich, hay que envolver Route\n//Route necesita los parametros exact (tiene que ser exacto el /),path, que es la ruta que estará ingresada en el url, y component que es el componente (que normalmente será una página creada por nosotros, que se cargará)\n  render(){\n    return (\n      <div>\n        <Header currentUser={this.state.currentUser} />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route path='/signin' component={SignInAndSignUpPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
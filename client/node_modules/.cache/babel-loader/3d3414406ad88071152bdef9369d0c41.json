{"ast":null,"code":"// es un componente de orden superior, es el contenedor que envolverá todo el componente collections-overview, y se obtendrá las propiedades del state para cargarlas como props al componente, y no hará falta hacerlo en el componente shop.component.\nimport { connect } from 'react-redux';\nimport { compose } from 'redux'; // permite componer sucesiones de funciones y componentes de orden superior, y se ven de una forma mas clara.\n\nimport { createStructuredSelector } from 'reselect'; // para seleccionar y vincular los valores del state de redux.\n\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component'; //a su vez WithSpinner es otro componente de orden superior, haremos un doble componente de orden superior, pero es completamente válido.\n\nimport CollectionsOverview from './collections-overview.component';\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n}); // es perfectamente válido concatenar componentes y funciones como a continuación, pero para que sea mas fácil ver las funciones y componentes concatenadas se utiliza \n//const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\n\nconst CollectionsOverviewContainer = compose(connect(mapStateToProps), WithSpinner)(CollectionsOverview);\nexport default CollectionsOverviewContainer;","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/src/components/collections-overview/collections-overview.container.jsx"],"names":["connect","compose","createStructuredSelector","selectIsCollectionFetching","WithSpinner","CollectionsOverview","mapStateToProps","isLoading","CollectionsOverviewContainer"],"mappings":"AAAA;AACA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB,C,CAAgC;;AAEhC,SAASC,wBAAT,QAAyC,UAAzC,C,CAAqD;;AACrD,SAASC,0BAAT,QAA0C,iCAA1C;AACA,OAAOC,WAAP,MAAwB,wCAAxB,C,CACA;;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AAEA,MAAMC,eAAe,GAAGJ,wBAAwB,CAAC;AAC/CK,EAAAA,SAAS,EAAEJ;AADoC,CAAD,CAAhD,C,CAIA;AACA;;AAEA,MAAMK,4BAA4B,GAAGP,OAAO,CAC1CD,OAAO,CAACM,eAAD,CADmC,EAE1CF,WAF0C,CAAP,CAGnCC,mBAHmC,CAArC;AAKA,eAAeG,4BAAf","sourcesContent":["// es un componente de orden superior, es el contenedor que envolverá todo el componente collections-overview, y se obtendrá las propiedades del state para cargarlas como props al componente, y no hará falta hacerlo en el componente shop.component.\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';// permite componer sucesiones de funciones y componentes de orden superior, y se ven de una forma mas clara.\n\nimport { createStructuredSelector } from 'reselect'; // para seleccionar y vincular los valores del state de redux.\nimport { selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../with-spinner/with-spinner.component';\n//a su vez WithSpinner es otro componente de orden superior, haremos un doble componente de orden superior, pero es completamente válido.\nimport CollectionsOverview from './collections-overview.component';\n\nconst mapStateToProps = createStructuredSelector({\n  isLoading: selectIsCollectionFetching\n});\n\n// es perfectamente válido concatenar componentes y funciones como a continuación, pero para que sea mas fácil ver las funciones y componentes concatenadas se utiliza \n//const CollectionsOverviewContainer = connect(mapStateToProps)(WithSpinner(CollectionsOverview));\n\nconst CollectionsOverviewContainer = compose (\n  connect(mapStateToProps),\n  WithSpinner\n)(CollectionsOverview);\n\nexport default CollectionsOverviewContainer;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeLatest, call, put, all, select } from 'redux-saga/effects'; //se importa select, para que se pueda hacer llamadas al selector del state-redux. Para obtener el user logeado y los cartsItems en el redux.\n\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\nimport { getUserCartRef } from '../../firebase/firebase.utils'; //getUserCartRef es para obtener los items que tiene guardado en el carrito el usuario, guardados en Firebase.\n\nimport { clearCart, setCartFromFirebase } from './cart.actions'; //se importan los selectors de current user y cartItems del state de redux.\n\nimport { selectCurrentUser } from '../user/user.selectors';\nimport { selectCartItems } from './cart.selectors';\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess)]);\n}","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/redux/cart/cart.sagas.js"],"names":["takeLatest","call","put","all","select","UserActionTypes","CartActionTypes","getUserCartRef","clearCart","setCartFromFirebase","selectCurrentUser","selectCartItems","clearCartOnSignOut","onSignOutSuccess","SIGN_OUT_SUCCESS","cartSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,QAAkD,oBAAlD,C,CACA;;AAEA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAASC,cAAT,QAA+B,+BAA/B,C,CACA;;AACA,SAASC,SAAT,EAAoBC,mBAApB,QAA+C,gBAA/C,C,CACA;;AACA,SAASC,iBAAT,QAAkC,wBAAlC;AACA,SAASC,eAAT,QAAgC,kBAAhC;AAEA,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMV,GAAG,CAACM,SAAS,EAAV,CAAT;AACD;AAED,OAAO,UAAUK,gBAAV,GAA6B;AAClC,QAAMb,UAAU,CAACK,eAAe,CAACS,gBAAjB,EAAmCF,kBAAnC,CAAhB;AACD;AAED,OAAO,UAAUG,SAAV,GAAsB;AAC3B,QAAMZ,GAAG,CAAC,CAACF,IAAI,CAACY,gBAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { takeLatest, call, put, all, select} from 'redux-saga/effects';\n//se importa select, para que se pueda hacer llamadas al selector del state-redux. Para obtener el user logeado y los cartsItems en el redux.\n\nimport UserActionTypes from '../user/user.types';\nimport CartActionTypes from './cart.types';\n\nimport { getUserCartRef } from '../../firebase/firebase.utils';\n//getUserCartRef es para obtener los items que tiene guardado en el carrito el usuario, guardados en Firebase.\nimport { clearCart, setCartFromFirebase } from './cart.actions';\n//se importan los selectors de current user y cartItems del state de redux.\nimport { selectCurrentUser } from '../user/user.selectors';\nimport { selectCartItems } from './cart.selectors';\n\nexport function* clearCartOnSignOut() {\n  yield put(clearCart());\n}\n\nexport function* onSignOutSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut )\n}\n\nexport function* cartSagas() {\n  yield all([call(onSignOutSuccess)]);\n}"]},"metadata":{},"sourceType":"module"}
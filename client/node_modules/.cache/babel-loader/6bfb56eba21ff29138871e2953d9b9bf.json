{"ast":null,"code":"var _jsxFileName = \"/home/pdrclv/react/crwn-clothing/client/src/components/checkout-item/checkout-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart, addItem, removeItem } from '../../redux/cart/cart.actions';\nimport { CheckOutItemContainer, ImgContainer, TextContainer, QuantityContainer, RemoveButtonContainer } from './checkout-item.styles';\n\nconst CheckoutItem = ({\n  cartItem,\n  clearItem,\n  addItem,\n  removeItem\n}) => {\n  const name = cartItem.name,\n        imageUrl = cartItem.imageUrl,\n        quantity = cartItem.quantity,\n        price = cartItem.price;\n  return React.createElement(CheckOutItemContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(ImgContainer, {\n    className: \"image-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imageUrl,\n    alt: \"item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  })), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, name), React.createElement(QuantityContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"arrow\",\n    onClick: () => removeItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"\\u276E\"), React.createElement(\"span\", {\n    className: \"value\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, quantity), React.createElement(\"div\", {\n    className: \"arrow\",\n    onClick: () => addItem(cartItem),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"\\u276F\")), React.createElement(TextContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, price), React.createElement(RemoveButtonContainer, {\n    onClick: () => {\n      alert('Item removed from cart');\n      clearItem(cartItem);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"\\u2715\"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","map":{"version":3,"sources":["/home/pdrclv/react/crwn-clothing/client/src/components/checkout-item/checkout-item.component.jsx"],"names":["React","connect","clearItemFromCart","addItem","removeItem","CheckOutItemContainer","ImgContainer","TextContainer","QuantityContainer","RemoveButtonContainer","CheckoutItem","cartItem","clearItem","name","imageUrl","quantity","price","alert","mapDispatchToProps","dispatch","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,OAA3B,EAAmCC,UAAnC,QAAqD,+BAArD;AAEA,SACEC,qBADF,EAEEC,YAFF,EAGEC,aAHF,EAIEC,iBAJF,EAKEC,qBALF,QAMS,wBANT;;AAQA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,SAAZ;AAAsBT,EAAAA,OAAtB;AAA8BC,EAAAA;AAA9B,CAAD,KAAgD;AAAA,QAC3DS,IAD2D,GACvBF,QADuB,CAC3DE,IAD2D;AAAA,QACrDC,QADqD,GACvBH,QADuB,CACrDG,QADqD;AAAA,QAC3CC,QAD2C,GACvBJ,QADuB,CAC3CI,QAD2C;AAAA,QACjCC,KADiC,GACvBL,QADuB,CACjCK,KADiC;AAEnE,SACA,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,iBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEF,QAAV;AAAoB,IAAA,GAAG,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBD,IAAhB,CAJF,EAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAC9BT,UAAU,CAACO,QAAD,CADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIE;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyBI,QAAzB,CAJF,EAKE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAE,MAC9BZ,OAAO,CAACQ,QAAD,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CALF,EAcE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgBK,KAAhB,CAdF,EAeE,oBAAC,qBAAD;AAAuB,IAAA,OAAO,EAAE,MAAI;AAClCC,MAAAA,KAAK,CAAC,wBAAD,CAAL;AACAL,MAAAA,SAAS,CAACD,QAAD,CAAT;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADA;AAsBA,CAxBF;;AA0BA,MAAMO,kBAAkB,GAAGC,QAAQ,KAAI;AACrCP,EAAAA,SAAS,EAAEQ,IAAI,IAAID,QAAQ,CAACjB,iBAAiB,CAACkB,IAAD,CAAlB,CADU;AAErCjB,EAAAA,OAAO,EAAEiB,IAAI,IAAID,QAAQ,CAAChB,OAAO,CAACiB,IAAD,CAAR,CAFY;AAGrChB,EAAAA,UAAU,EAAEgB,IAAI,IAAID,QAAQ,CAACf,UAAU,CAACgB,IAAD,CAAX;AAHS,CAAJ,CAAnC;;AAMA,eAAenB,OAAO,CAAC,IAAD,EAAMiB,kBAAN,CAAP,CAAiCR,YAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { clearItemFromCart,addItem,removeItem } from '../../redux/cart/cart.actions';\n\nimport { \n  CheckOutItemContainer,\n  ImgContainer,\n  TextContainer,\n  QuantityContainer,\n  RemoveButtonContainer\n  } from './checkout-item.styles';\n\nconst CheckoutItem = ({ cartItem, clearItem,addItem,removeItem }) => {\n  const { name, imageUrl, quantity, price } = cartItem;\n  return(\n  <CheckOutItemContainer>\n    <ImgContainer className='image-container'>\n      <img src={imageUrl} alt='item' />\n    </ImgContainer>\n    <TextContainer>{name}</TextContainer>\n    <QuantityContainer>\n      <div className='arrow' onClick={()=>\n        removeItem(cartItem)\n      }>&#10094;</div>\n      <span className='value'>{quantity}</span>\n      <div className='arrow' onClick={()=>\n        addItem(cartItem)\n      }>&#10095;</div>\n    </QuantityContainer>\n    <TextContainer>{price}</TextContainer>\n    <RemoveButtonContainer onClick={()=>{\n      alert('Item removed from cart');\n      clearItem(cartItem);\n    }}>&#10005;</RemoveButtonContainer>\n  </CheckOutItemContainer>\n\n)};\n\nconst mapDispatchToProps = dispatch =>({\n  clearItem: item => dispatch(clearItemFromCart(item)),\n  addItem: item => dispatch(addItem(item)),\n  removeItem: item => dispatch(removeItem(item))\n})\n\nexport default connect(null,mapDispatchToProps)(CheckoutItem);"]},"metadata":{},"sourceType":"module"}